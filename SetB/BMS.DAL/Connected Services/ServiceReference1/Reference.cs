//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMS.DAL.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Business", Namespace="http://schemas.datacontract.org/2004/07/BMS.WcfService")]
    [System.SerializableAttribute()]
    public partial class Business : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityNature {
            get {
                return this.ActivityNatureField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNatureField, value) != true)) {
                    this.ActivityNatureField = value;
                    this.RaisePropertyChanged("ActivityNature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessID {
            get {
                return this.BusinessIDField;
            }
            set {
                if ((this.BusinessIDField.Equals(value) != true)) {
                    this.BusinessIDField = value;
                    this.RaisePropertyChanged("BusinessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmAddress {
            get {
                return this.FirmAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmAddressField, value) != true)) {
                    this.FirmAddressField = value;
                    this.RaisePropertyChanged("FirmAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmName {
            get {
                return this.FirmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmNameField, value) != true)) {
                    this.FirmNameField = value;
                    this.RaisePropertyChanged("FirmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBusinessService")]
    public interface IBusinessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GenerateBusinessID", ReplyAction="http://tempuri.org/IBusinessService/GenerateBusinessIDResponse")]
        int GenerateBusinessID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GenerateBusinessID", ReplyAction="http://tempuri.org/IBusinessService/GenerateBusinessIDResponse")]
        System.Threading.Tasks.Task<int> GenerateBusinessIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/AddBusiness", ReplyAction="http://tempuri.org/IBusinessService/AddBusinessResponse")]
        bool AddBusiness(BMS.DAL.ServiceReference1.Business business);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/AddBusiness", ReplyAction="http://tempuri.org/IBusinessService/AddBusinessResponse")]
        System.Threading.Tasks.Task<bool> AddBusinessAsync(BMS.DAL.ServiceReference1.Business business);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusinessServiceChannel : BMS.DAL.ServiceReference1.IBusinessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusinessServiceClient : System.ServiceModel.ClientBase<BMS.DAL.ServiceReference1.IBusinessService>, BMS.DAL.ServiceReference1.IBusinessService {
        
        public BusinessServiceClient() {
        }
        
        public BusinessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusinessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GenerateBusinessID() {
            return base.Channel.GenerateBusinessID();
        }
        
        public System.Threading.Tasks.Task<int> GenerateBusinessIDAsync() {
            return base.Channel.GenerateBusinessIDAsync();
        }
        
        public bool AddBusiness(BMS.DAL.ServiceReference1.Business business) {
            return base.Channel.AddBusiness(business);
        }
        
        public System.Threading.Tasks.Task<bool> AddBusinessAsync(BMS.DAL.ServiceReference1.Business business) {
            return base.Channel.AddBusinessAsync(business);
        }
    }
}
